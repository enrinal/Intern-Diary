// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import models "gitlab.warungpintar.co/enrinal/intern-diary/simple-order/models"

// Usecase is an autogenerated mock type for the Usecase type
type Usecase struct {
	mock.Mock
}

// AddItem provides a mock function with given fields: _a0
func (_m *Usecase) AddItem(_a0 models.Cart) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(models.Cart) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetCustCart provides a mock function with given fields: custid
func (_m *Usecase) GetCustCart(custid int64) ([]models.Cart, error) {
	ret := _m.Called(custid)

	var r0 []models.Cart
	if rf, ok := ret.Get(0).(func(int64) []models.Cart); ok {
		r0 = rf(custid)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Cart)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int64) error); ok {
		r1 = rf(custid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RemoveItem provides a mock function with given fields: _a0
func (_m *Usecase) RemoveItem(_a0 models.Cart) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(models.Cart) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
